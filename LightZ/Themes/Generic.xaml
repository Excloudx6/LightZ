<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:controls="clr-namespace:LightZ.ComponentModel.UI.Controls"
                    xmlns:converters="clr-namespace:LightZ.ComponentModel.UI.Converters">

    <converters:ActiveColorSetToSolidColorBrushConverter x:Key="ActiveColorSetToSolidColorBrushConverter" ColorName="SystemAccent"/>
    <converters:BooleanToVerticalAlignmentConverter x:Key="BooleanToVerticalAlignmentConverter"/>

    <Style TargetType="{x:Type controls:BlurredWindow}">
        <Setter Property="BorderBrush" Value="{Binding Converter={StaticResource ActiveColorSetToSolidColorBrushConverter}}"/>
        <Setter Property="AllowsTransparency" Value="True"/>
        <Setter Property="WindowStyle" Value="None"/>
        <Setter Property="Foreground" Value="{DynamicResource ForegroundBrush}"/>
        <Setter Property="IsBlurred" Value="True"/>
        <Setter Property="UseAccentColor" Value="Auto"/>
        <Setter Property="Tag" Value="{DynamicResource {x:Static SystemParameters.HighContrastKey}}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type controls:BlurredWindow}">
                    <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1" SnapsToDevicePixels="true">
                        <AdornerDecorator>
                            <ContentPresenter/>
                        </AdornerDecorator>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsKeyboardFocusWithin" Value="False">
                            <Setter Property="BorderBrush" Value="{DynamicResource BackgroundBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="controls:TouchTextBox">
        <Setter Property="Height" Value="36"/>
        <Setter Property="Width" Value="Auto"/>
        <Setter Property="Background" Value="{DynamicResource TouchTextBoxEnabledBackgroundBrush}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource TouchTextBoxEnabledBorderBrush}"/>
        <Setter Property="Foreground" Value="{DynamicResource ForegroundBrush}"/>
        <Setter Property="PlaceHolderForeground" Value="{DynamicResource TouchTextBoxDisabledTextBrush}"/>
        <Setter Property="CaretBrush" Value="{DynamicResource ForegroundBrush}"/>
        <Setter Property="BorderThickness" Value="2"/>
        <Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="AllowDrop" Value="true"/>
        <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
        <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
        <Setter Property="FontSize" Value="15"/>
        <Setter Property="TabIndex" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="controls:TouchTextBox">
                    <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                        <Grid>
                            <TextBlock x:Name="PlaceHolderTextBlock" Foreground="{TemplateBinding PlaceHolderForeground}" Text="{Binding PlaceHolder, RelativeSource={RelativeSource TemplatedParent}}" VerticalAlignment="{Binding AcceptsReturn, Converter={StaticResource BooleanToVerticalAlignmentConverter}, RelativeSource={RelativeSource TemplatedParent}}" Cursor="IBeam" Padding="2,0,0,0"/>
                            <DockPanel LastChildFill="True" FlowDirection="RightToLeft">
                                <Viewbox x:Name="ClearViewbox" HorizontalAlignment="Right" Stretch="Fill" Margin="5,0,5,0" Width="18" Height="18" VerticalAlignment="Center">
                                    <Grid Width="15" Height="15">
                                        <TextBlock Text="&#xE10A;" FontFamily="Segoe MDL2 Assets"/>
                                        <Grid x:Name="ClearClickableZone" Background="Transparent"/>
                                    </Grid>
                                </Viewbox>
                                <ScrollViewer x:Name="PART_ContentHost" FlowDirection="{TemplateBinding FlowDirection}" Focusable="false" Background="Transparent" HorizontalScrollBarVisibility="{TemplateBinding HorizontalScrollBarVisibility}" VerticalScrollBarVisibility="{TemplateBinding VerticalScrollBarVisibility}" VerticalAlignment="{Binding AcceptsReturn, Converter={StaticResource BooleanToVerticalAlignmentConverter}, RelativeSource={RelativeSource TemplatedParent}}"/>
                            </DockPanel>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource TouchTextBoxFocusedBorderBrush}"/>
                            <Setter Property="Background" TargetName="border" Value="{DynamicResource TouchTextBoxOverBackground}"/>
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="True">
                            <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource TouchTextBoxFocusedBorderBrush}"/>
                            <Setter Property="Background" TargetName="border" Value="{DynamicResource TouchTextBoxOverBackground}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource TouchTextBoxOverBorderBrush}"/>
                            <Setter Property="Background" TargetName="border" Value="{DynamicResource TouchTextBoxOverBackground}"/>
                        </Trigger>
                        <Trigger Property="AreAnyTouchesOver" Value="True">
                            <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource TouchTextBoxOverBorderBrush}"/>
                            <Setter Property="Background" TargetName="border" Value="{DynamicResource TouchTextBoxOverBackground}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource TouchTextBoxDisabledBorderBrush}"/>
                            <Setter Property="Foreground" Value="{DynamicResource TouchTextBoxDisabledTextBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsInactiveSelectionHighlightEnabled" Value="true"/>
                    <Condition Property="IsSelectionActive" Value="false"/>
                </MultiTrigger.Conditions>
                <Setter Property="SelectionBrush" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"/>
            </MultiTrigger>
        </Style.Triggers>
    </Style>
</ResourceDictionary>